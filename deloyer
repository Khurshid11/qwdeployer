#!/bin/bash
# Bash Menu Script Example

# Text Formating
txtgrn=$(tput setaf 2) # Green
txtwht=$(tput setaf 7) # White
txtblu=$(tput setaf 4) # Blue
txtrst=$(tput sgr0) # Text reset.
txtbold=$(tput bold) # Text Bold
txtred=$(tput setaf 1) # red
txtyellow=$(tput setaf 3) # yellow

TXT_START="$txtblu[START]$txtrst";
TXT_FINISH="${txtyellow}FINISHED${txtrst}";
TXT_ERROR="${txtred}ERROR OCCURRED:${txtrst}";

# project specific settings
PROJ_NAME=''
PROJ_PATH=''

DEPLOYMENT_FULL_PATH=''
BUILD_COMMAND=''
RUN_COMMAND=''
HOST_NAME=''
RC_NAME=''

#Handle error status
function error_exit
{
 echo "$TXT_ERROR$1$txtrst" | 1>&2
 exit 1
}

function selectHost() {
  echo ""
  echo ${txtyellow}
  echo "PLease select Host .."
  echo "1. Development"
  echo "2. Testing"
  echo "---------------"
  echo "3. ALL"
  
  echo ${txtrst}
  while :
  do
    read INPUT_STRING
    case $INPUT_STRING in
	  1)
      HOST_NAME="development"
      break
		  ;;
    2)
      HOST_NAME="testing"
      break
	  	;;
    
    3)
      HOST_NAME="applicationstack"
      break
	  	;;
    *)
		  echo "Wrong input supplied"
		  ;;
     esac
  done  
}

function selectProject() {
  
  echo "Please select the project ..."
  echo ${txtyellow}
  echo "1. ums"
  echo "2. ppixxells"
  echo "3. pizzar"
  echo ${txtrst}
while :
do
  read INPUT_STRING
  case $INPUT_STRING in
	1)
		echo "Deploying ums!"
    PROJ_NAME="ums"
    break
		;;
  2)
		echo "Deploying Ppixxells!"
    PROJ_NAME="ppixxells"
    break
		;;
  3)
		echo "Deploying Pizzar!"
    PROJ_NAME="pizzar"
    break
		;;
  
	*)
		echo "Wrong input supplied"
		;;
  esac
done
}

 function fetchTags() {
  #echo "Fetching RC list from: ";
  #echo "git fetch --tags git@github.com:Khurshid11/$PROJ_NAME.git";
   git fetch --tags git@github.com:Khurshid11/$PROJ_NAME.git 
   if [ "$?" != "0" ]; then
      return 1
    fi
    return 0
 } 

function checkoutToProject() {
    rm -rf "/workspace/$PROJ_NAME"    
    cd "/workspace"
    git clone git@github.com:Khurshid11/$PROJ_NAME.git
    if [ "$?" != "0" ]; then
      return 1
    fi
    return 0
 }

 function showExistingRc() {
  echo "fetching RC list"
  echo "Please wait ...."

  
  cd "/workspace/$PROJ_NAME"
  
  fetchTags
  if [ "$?" != "0" ]; then
      cd ..
      checkoutToProject
      cd "/workspace/$PROJ_NAME"
      fetchTags
      if [ "$?" != "0" ]; then
       return 1
      fi
  fi

  echo "Running git fetch"

  echo ${txtyellow}
  git tag | sort -V | tail -10
  echo ${txtrst}
  return 0
}

function askForRcName() {
  read -p "Enter RC Name to be deployed [ $PROJ_NAME ]: "  RC_NAME
  if [ "$?" != "0" ]; then
    return 1
  fi
  return 0
}

function deploy() {
    echo "Checking out $RC_NAME"
    git checkout $RC_NAME
    if [ "$?" != "0" ]; then
      return 1
    fi
    #echo "clear off bin directory"
    
    #rm -rf $GOBIN/*
    #echo "Build Package"
    docker build --tag=Khurshid11/$PROJ_NAME:$RC_NAME . > /dev/null
    if [ "$?" != "0" ]; then
      return 1
    fi
    docker save Khurshid11/$PROJ_NAME:$RC_NAME -o $PROJ_NAME-$RC_NAME.tar
    if [ "$?" != "0" ]; then
      return 1
    fi
    
    mkdir -p /images/$PROJ_NAME/
    if [ "$?" != "0" ]; then
      return 1
    fi
    mv /workspace/$PROJ_NAME/$PROJ_NAME-$RC_NAME.tar /images/$PROJ_NAME/$PROJ_NAME-$RC_NAME.tar
    if [ "$?" != "0" ]; then
      return 1
    fi

    ANSIBLE_NOCOWS=1 ansible-playbook  /opt/ansible/playbooks/qwentic/deploydocker.yml \
    --extra-vars "binpath=/images/ hosts=$HOST_NAME \
    rcname=$RC_NAME ansible_become_pass=master projname=$PROJ_NAME"
    if [ "$?" != "0" ]; then
      return 1
    fi

}

function showsuccess() {
  /usr/games/cowsay -f moofasa ${txtyellow}It seems you just got it correct.${txtrst}
}

function main() {
    selectProject || error_exit "Not a valid project:("
    selectHost || error_exit "Not a valid host:("

    showExistingRc || error_exit "Could Not Show RC list :("
    askForRcName || error_exit "Could Not Show RC list :("
    deploy || error_exit "Deployment failed :("
    showsuccess
    
}

main